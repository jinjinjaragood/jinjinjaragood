`timescale 1ns / 1ps
// First padding module: 1 x 26 x 34 ; channel x width x height

module clock_padding_first (

    input  wire clk,
    input  wire rst_n, // Active-low reset signal
    input  wire [31:0] data [0:883], // 1x3x4의 입력 데이터
    output reg  [31:0] output_data [0:1007], // 1x5x6의 출력 데이터
    output wire [31:0] output_data_real,
    output reg done // 완료 신호
);

    integer i, j;
    reg init_done; // Initialization flag

    // Sequential block to handle initialization and output data processing
    always @(posedge clk or negedge rst_n) begin
        if (!rst_n) begin
            // Asynchronous reset: Initialize output data and reset done signal
            for (i = 0; i < 1008; i = i + 1) begin
                output_data[i] <= 32'h00000000;
            end
            done <= 0;
            init_done <= 0;
        end else if (!init_done) begin
            // Perform initialization
            for (i = 0; i < 26; i = i + 1) begin
                for (j = 0; j < 34; j = j + 1) begin
                    output_data[(i + 1) * 36 + (j + 1)] <= data[i * 34 + j];
                end
            end
            init_done <= 1;
            done <= 1; // Set done signal after initialization
        end
    end

endmodule
